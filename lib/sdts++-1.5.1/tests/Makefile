# Makefile.in generated by automake 1.7.5 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# $Id: Makefile.am,v 1.38 2003/06/10 20:57:24 mcoletti Exp $
#

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/sdts++
pkglibdir = $(libdir)/sdts++
pkgincludedir = $(includedir)/sdts++
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = i686-pc-linux-gnuaout
ACLOCAL = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run autoconf
AUTOHEADER = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run autoheader
AUTOMAKE = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run automake-1.7
AWK = gawk
BOOST_HEADER = ${prefix}/include
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"sdts++\" -DVERSION=\"1.5.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DVECTOR_ITERATOR_POINTER_NOT_EQUIVALENT=1 -DHAVE_UNISTD_H=1 -DHAVE_FLOAT_H=1 -DHAVE_BOOST_SMART_PTR_HPP=1 
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /major/aeheathc/sdts/sdts++-1.5.1/missing --run makeinfo
OBJEXT = o
PACKAGE = sdts++
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.5.1
YACC = bison -y
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_prefix_program = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnuaout
build_alias = 
build_cpu = i686
build_os = linux-gnuaout
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-pc-linux-gnuaout
host_alias = 
host_cpu = i686
host_os = linux-gnuaout
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /major/aeheathc/sdts/sdts++-1.5.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /home/major/aeheathc/libs/sdts
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
subdirs =  sysutils
sysconfdir = ${prefix}/etc
target_alias = 

INCLUDES = -I$(top_srcdir) -I$(includedir) -I$(BOOST_HEADER)

AM_CXXFLAGS = -ggdb3

SCRIPT_TESTS = sh_Comp_t sh_8211_t sh_ReadWrite_t sh_Writer_t sh_Accessor_t sh_Cell_t sh_Line_t sh_Directory_t

BINARY_TESTS = container_t			\
	sc_Field_t				\
	sc_MultiTypeValue_t			\
	sc_Subfield_t				\
	sio_8211Converter_t			\
	sio_ConverterFactory_t			\
	sio_8211DDRField_t			\
	sio_8211DDRLeader_t			\
	sio_8211DDR_t				\
	sio_8211DRLeader_t			\
	sio_8211DR_t				\
	sio_8211DirEntry_t			\
	sio_8211FieldFormat_t			\
	sio_8211Field_t				\
	sio_8211SubfieldFormat_t		\
	sio_Buffer_t				\
	sio_Error_t                             \
        sb_catd_t				\
        sb_cats_t				\
        sb_ForeignID_t				\
        sb_Spatial_t				\
        sb_utils_t				\
	sl_Point_t				\
	sl_String_t				\
	sl_Chain_t				\
	sl_Ring_t				\
	sl_Polygon_t				\
	sl_Node_t


TESTS = $(BINARY_TESTS) $(SCRIPT_TESTS)


# make sure the test scripts and test data are including in distributions
EXTRA_DIST = $(SCRIPT_TESTS) abcdiden.ddf abcdcatd.ddf Jamfile

noinst_PROGRAMS = $(BINARY_TESTS) 		\
		  sio_8211_t 			\
		  sio_ReadWrite_t 		\
		  sio_Reader_t 			\
		  sio_Writer_t 			\
		  sb_line_t			\
		  sb_comp_t			\
		  sb_Directory_t		\
		  sb_dddf_t			\
		  sb_ddom_t			\
		  sb_ddsh_t			\
	  	  sb_accessor_t			\
		  sb_cell_t			\
	 	  sb_spdm_t			\
		  sb_ring_t			\
		  sb_poly_t			\
                  sb_pnts_t			\
		  sb_xref_t			\
		  sb_iden_t			\
		  sb_iref_t



# if we're in maintainer mode, then we're not running libtool, so just
# link against the plain ole .a
LIBRARY = $(top_builddir)/sdts++/libsdts++.la $(top_builddir)/sysutils/libsysutils.a

container_t_LDADD = $(LIBRARY)
container_t_SOURCES = container_t.cpp

sc_Field_t_LDADD = $(LIBRARY)
sc_Field_t_SOURCES = sc_Field_t.cpp

sc_MultiTypeValue_t_LDADD = $(LIBRARY)
sc_MultiTypeValue_t_SOURCES = sc_MultiTypeValue_t.cpp

sc_Subfield_t_LDADD = $(LIBRARY)
sc_Subfield_t_SOURCES = sc_Subfield_t.cpp

sio_8211Converter_t_LDADD = $(LIBRARY)
sio_8211Converter_t_SOURCES = sio_8211Converter_t.cpp

sio_ConverterFactory_t_LDADD = $(LIBRARY)
sio_ConverterFactory_t_SOURCES = sio_ConverterFactory_t.cpp

sio_8211DDRField_t_LDADD = $(LIBRARY)
sio_8211DDRField_t_SOURCES = sio_8211DDRField_t.cpp

sio_8211DDRLeader_t_LDADD = $(LIBRARY)
sio_8211DDRLeader_t_SOURCES = sio_8211DDRLeader_t.cpp

sio_8211DDR_t_LDADD = $(LIBRARY)
sio_8211DDR_t_SOURCES = sio_8211DDR_t.cpp

sio_8211DRLeader_t_LDADD = $(LIBRARY)
sio_8211DRLeader_t_SOURCES = sio_8211DRLeader_t.cpp

sio_8211DR_t_LDADD = $(LIBRARY)
sio_8211DR_t_SOURCES = sio_8211DR_t.cpp

sio_8211DirEntry_t_LDADD = $(LIBRARY)
sio_8211DirEntry_t_SOURCES = sio_8211DirEntry_t.cpp

sio_8211FieldFormat_t_LDADD = $(LIBRARY)
sio_8211FieldFormat_t_SOURCES = sio_8211FieldFormat_t.cpp

sio_8211Field_t_LDADD = $(LIBRARY)
sio_8211Field_t_SOURCES = sio_8211Field_t.cpp

sio_8211SubfieldFormat_t_LDADD = $(LIBRARY)
sio_8211SubfieldFormat_t_SOURCES = sio_8211SubfieldFormat_t.cpp

sio_8211_t_LDADD = $(LIBRARY)
sio_8211_t_SOURCES = sio_8211_t.cpp

sio_Buffer_t_LDADD = $(LIBRARY)
sio_Buffer_t_SOURCES = sio_Buffer_t.cpp

sio_Error_t_LDADD = $(LIBRARY)
sio_Error_t_SOURCES = sio_Error_t.cpp

sio_ReadWrite_t_LDADD = $(LIBRARY)
sio_ReadWrite_t_SOURCES = sio_ReadWrite_t.cpp

sio_Reader_t_LDADD = $(LIBRARY)
sio_Reader_t_SOURCES = sio_Reader_t.cpp

sio_Writer_t_LDADD = $(LIBRARY)
sio_Writer_t_SOURCES = sio_Writer_t.cpp

sb_cell_t_LDADD = $(LIBRARY)
sb_cell_t_SOURCES = sb_cell_t.cpp

sb_ForeignID_t_LDADD = $(LIBRARY)
sb_ForeignID_t_SOURCES = sb_ForeignID_t.cpp

sb_line_t_LDADD = $(LIBRARY)
sb_line_t_SOURCES = sb_line_t.cpp

sb_spdm_t_LDADD = $(LIBRARY)
sb_spdm_t_SOURCES = sb_spdm_t.cpp

sb_ring_t_LDADD = $(LIBRARY)
sb_ring_t_SOURCES = sb_ring_t.cpp

sb_comp_t_LDADD = $(LIBRARY)
sb_comp_t_SOURCES = sb_comp_t.cpp

sb_poly_t_LDADD = $(LIBRARY)
sb_poly_t_SOURCES = sb_poly_t.cpp

sb_Spatial_t_LDADD = $(LIBRARY)
sb_Spatial_t_SOURCES = sb_Spatial_t.cpp

sb_utils_t_LDADD = $(LIBRARY)
sb_utils_t_SOURCES = sb_utils_t.cpp

sb_catd_t_LDADD = $(LIBRARY)
sb_catd_t_SOURCES = sb_catd_t.cpp

sb_Directory_t_LDADD = $(LIBRARY)
sb_Directory_t_SOURCES = sb_Directory_t.cpp

sb_cats_t_LDADD = $(LIBRARY)
sb_cats_t_SOURCES = sb_cats_t.cpp

sb_accessor_t_LDADD = $(LIBRARY) -L$(libdir) -lboost_filesystem
sb_accessor_t_SOURCES = sb_accessor_t.cpp

sb_pnts_t_LDADD = $(LIBRARY)
sb_pnts_t_SOURCES = sb_pnts_t.cpp

sb_xref_t_LDADD = $(LIBRARY)
sb_xref_t_SOURCES = sb_xref_t.cpp

sb_iden_t_LDADD = $(LIBRARY)
sb_iden_t_SOURCES = sb_iden_t.cpp

sb_iref_t_LDADD = $(LIBRARY)
sb_iref_t_SOURCES = sb_iref_t.cpp

sl_Point_t_LDADD = $(LIBRARY)
sl_Point_t_SOURCES = sl_Point_t.cpp

sl_Node_t_LDADD = $(LIBRARY)
sl_Node_t_SOURCES = sl_Node_t.cpp

sl_String_t_LDADD = $(LIBRARY)
sl_String_t_SOURCES = sl_String_t.cpp

sl_Chain_t_LDADD = $(LIBRARY)
sl_Chain_t_SOURCES = sl_Chain_t.cpp

sl_Ring_t_LDADD = $(LIBRARY)
sl_Ring_t_SOURCES = sl_Ring_t.cpp

sl_Polygon_t_LDADD = $(LIBRARY)
sl_Polygon_t_SOURCES = sl_Polygon_t.cpp


#sb_arc_t_LDADD                 = $(LIBRARY)
#sb_arc_t_SOURCES            = sb_arc_t.cpp

#sb_iden_t_LDADD                = $(LIBRARY)
#sb_iden_t_SOURCES            = sb_iden_t.cpp

#sb_iref_t_LDADD                = $(LIBRARY)
#sb_iref_t_SOURCES            = sb_iref_t.cpp
sb_dddf_t_LDADD = $(LIBRARY)
sb_dddf_t_SOURCES = sb_dddf_t.cpp

sb_ddom_t_LDADD = $(LIBRARY)
sb_ddom_t_SOURCES = sb_ddom_t.cpp

sb_ddsh_t_LDADD = $(LIBRARY)
sb_ddsh_t_SOURCES = sb_ddsh_t.cpp
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = container_t$(EXEEXT) sc_Field_t$(EXEEXT) \
	sc_MultiTypeValue_t$(EXEEXT) sc_Subfield_t$(EXEEXT) \
	sio_8211Converter_t$(EXEEXT) sio_ConverterFactory_t$(EXEEXT) \
	sio_8211DDRField_t$(EXEEXT) sio_8211DDRLeader_t$(EXEEXT) \
	sio_8211DDR_t$(EXEEXT) sio_8211DRLeader_t$(EXEEXT) \
	sio_8211DR_t$(EXEEXT) sio_8211DirEntry_t$(EXEEXT) \
	sio_8211FieldFormat_t$(EXEEXT) sio_8211Field_t$(EXEEXT) \
	sio_8211SubfieldFormat_t$(EXEEXT) sio_Buffer_t$(EXEEXT) \
	sio_Error_t$(EXEEXT) sb_catd_t$(EXEEXT) sb_cats_t$(EXEEXT) \
	sb_ForeignID_t$(EXEEXT) sb_Spatial_t$(EXEEXT) \
	sb_utils_t$(EXEEXT) sl_Point_t$(EXEEXT) sl_String_t$(EXEEXT) \
	sl_Chain_t$(EXEEXT) sl_Ring_t$(EXEEXT) sl_Polygon_t$(EXEEXT) \
	sl_Node_t$(EXEEXT) sio_8211_t$(EXEEXT) sio_ReadWrite_t$(EXEEXT) \
	sio_Reader_t$(EXEEXT) sio_Writer_t$(EXEEXT) sb_line_t$(EXEEXT) \
	sb_comp_t$(EXEEXT) sb_Directory_t$(EXEEXT) sb_dddf_t$(EXEEXT) \
	sb_ddom_t$(EXEEXT) sb_ddsh_t$(EXEEXT) sb_accessor_t$(EXEEXT) \
	sb_cell_t$(EXEEXT) sb_spdm_t$(EXEEXT) sb_ring_t$(EXEEXT) \
	sb_poly_t$(EXEEXT) sb_pnts_t$(EXEEXT) sb_xref_t$(EXEEXT) \
	sb_iden_t$(EXEEXT) sb_iref_t$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_container_t_OBJECTS = container_t.$(OBJEXT)
container_t_OBJECTS = $(am_container_t_OBJECTS)
container_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
container_t_LDFLAGS =
am_sb_Directory_t_OBJECTS = sb_Directory_t.$(OBJEXT)
sb_Directory_t_OBJECTS = $(am_sb_Directory_t_OBJECTS)
sb_Directory_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_Directory_t_LDFLAGS =
am_sb_ForeignID_t_OBJECTS = sb_ForeignID_t.$(OBJEXT)
sb_ForeignID_t_OBJECTS = $(am_sb_ForeignID_t_OBJECTS)
sb_ForeignID_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_ForeignID_t_LDFLAGS =
am_sb_Spatial_t_OBJECTS = sb_Spatial_t.$(OBJEXT)
sb_Spatial_t_OBJECTS = $(am_sb_Spatial_t_OBJECTS)
sb_Spatial_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_Spatial_t_LDFLAGS =
am_sb_accessor_t_OBJECTS = sb_accessor_t.$(OBJEXT)
sb_accessor_t_OBJECTS = $(am_sb_accessor_t_OBJECTS)
sb_accessor_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_accessor_t_LDFLAGS =
am_sb_catd_t_OBJECTS = sb_catd_t.$(OBJEXT)
sb_catd_t_OBJECTS = $(am_sb_catd_t_OBJECTS)
sb_catd_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_catd_t_LDFLAGS =
am_sb_cats_t_OBJECTS = sb_cats_t.$(OBJEXT)
sb_cats_t_OBJECTS = $(am_sb_cats_t_OBJECTS)
sb_cats_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_cats_t_LDFLAGS =
am_sb_cell_t_OBJECTS = sb_cell_t.$(OBJEXT)
sb_cell_t_OBJECTS = $(am_sb_cell_t_OBJECTS)
sb_cell_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_cell_t_LDFLAGS =
am_sb_comp_t_OBJECTS = sb_comp_t.$(OBJEXT)
sb_comp_t_OBJECTS = $(am_sb_comp_t_OBJECTS)
sb_comp_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_comp_t_LDFLAGS =
am_sb_dddf_t_OBJECTS = sb_dddf_t.$(OBJEXT)
sb_dddf_t_OBJECTS = $(am_sb_dddf_t_OBJECTS)
sb_dddf_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_dddf_t_LDFLAGS =
am_sb_ddom_t_OBJECTS = sb_ddom_t.$(OBJEXT)
sb_ddom_t_OBJECTS = $(am_sb_ddom_t_OBJECTS)
sb_ddom_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_ddom_t_LDFLAGS =
am_sb_ddsh_t_OBJECTS = sb_ddsh_t.$(OBJEXT)
sb_ddsh_t_OBJECTS = $(am_sb_ddsh_t_OBJECTS)
sb_ddsh_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_ddsh_t_LDFLAGS =
am_sb_iden_t_OBJECTS = sb_iden_t.$(OBJEXT)
sb_iden_t_OBJECTS = $(am_sb_iden_t_OBJECTS)
sb_iden_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_iden_t_LDFLAGS =
am_sb_iref_t_OBJECTS = sb_iref_t.$(OBJEXT)
sb_iref_t_OBJECTS = $(am_sb_iref_t_OBJECTS)
sb_iref_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_iref_t_LDFLAGS =
am_sb_line_t_OBJECTS = sb_line_t.$(OBJEXT)
sb_line_t_OBJECTS = $(am_sb_line_t_OBJECTS)
sb_line_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_line_t_LDFLAGS =
am_sb_pnts_t_OBJECTS = sb_pnts_t.$(OBJEXT)
sb_pnts_t_OBJECTS = $(am_sb_pnts_t_OBJECTS)
sb_pnts_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_pnts_t_LDFLAGS =
am_sb_poly_t_OBJECTS = sb_poly_t.$(OBJEXT)
sb_poly_t_OBJECTS = $(am_sb_poly_t_OBJECTS)
sb_poly_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_poly_t_LDFLAGS =
am_sb_ring_t_OBJECTS = sb_ring_t.$(OBJEXT)
sb_ring_t_OBJECTS = $(am_sb_ring_t_OBJECTS)
sb_ring_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_ring_t_LDFLAGS =
am_sb_spdm_t_OBJECTS = sb_spdm_t.$(OBJEXT)
sb_spdm_t_OBJECTS = $(am_sb_spdm_t_OBJECTS)
sb_spdm_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_spdm_t_LDFLAGS =
am_sb_utils_t_OBJECTS = sb_utils_t.$(OBJEXT)
sb_utils_t_OBJECTS = $(am_sb_utils_t_OBJECTS)
sb_utils_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_utils_t_LDFLAGS =
am_sb_xref_t_OBJECTS = sb_xref_t.$(OBJEXT)
sb_xref_t_OBJECTS = $(am_sb_xref_t_OBJECTS)
sb_xref_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sb_xref_t_LDFLAGS =
am_sc_Field_t_OBJECTS = sc_Field_t.$(OBJEXT)
sc_Field_t_OBJECTS = $(am_sc_Field_t_OBJECTS)
sc_Field_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sc_Field_t_LDFLAGS =
am_sc_MultiTypeValue_t_OBJECTS = sc_MultiTypeValue_t.$(OBJEXT)
sc_MultiTypeValue_t_OBJECTS = $(am_sc_MultiTypeValue_t_OBJECTS)
sc_MultiTypeValue_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sc_MultiTypeValue_t_LDFLAGS =
am_sc_Subfield_t_OBJECTS = sc_Subfield_t.$(OBJEXT)
sc_Subfield_t_OBJECTS = $(am_sc_Subfield_t_OBJECTS)
sc_Subfield_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sc_Subfield_t_LDFLAGS =
am_sio_8211Converter_t_OBJECTS = sio_8211Converter_t.$(OBJEXT)
sio_8211Converter_t_OBJECTS = $(am_sio_8211Converter_t_OBJECTS)
sio_8211Converter_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211Converter_t_LDFLAGS =
am_sio_8211DDRField_t_OBJECTS = sio_8211DDRField_t.$(OBJEXT)
sio_8211DDRField_t_OBJECTS = $(am_sio_8211DDRField_t_OBJECTS)
sio_8211DDRField_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DDRField_t_LDFLAGS =
am_sio_8211DDRLeader_t_OBJECTS = sio_8211DDRLeader_t.$(OBJEXT)
sio_8211DDRLeader_t_OBJECTS = $(am_sio_8211DDRLeader_t_OBJECTS)
sio_8211DDRLeader_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DDRLeader_t_LDFLAGS =
am_sio_8211DDR_t_OBJECTS = sio_8211DDR_t.$(OBJEXT)
sio_8211DDR_t_OBJECTS = $(am_sio_8211DDR_t_OBJECTS)
sio_8211DDR_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DDR_t_LDFLAGS =
am_sio_8211DRLeader_t_OBJECTS = sio_8211DRLeader_t.$(OBJEXT)
sio_8211DRLeader_t_OBJECTS = $(am_sio_8211DRLeader_t_OBJECTS)
sio_8211DRLeader_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DRLeader_t_LDFLAGS =
am_sio_8211DR_t_OBJECTS = sio_8211DR_t.$(OBJEXT)
sio_8211DR_t_OBJECTS = $(am_sio_8211DR_t_OBJECTS)
sio_8211DR_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DR_t_LDFLAGS =
am_sio_8211DirEntry_t_OBJECTS = sio_8211DirEntry_t.$(OBJEXT)
sio_8211DirEntry_t_OBJECTS = $(am_sio_8211DirEntry_t_OBJECTS)
sio_8211DirEntry_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211DirEntry_t_LDFLAGS =
am_sio_8211FieldFormat_t_OBJECTS = sio_8211FieldFormat_t.$(OBJEXT)
sio_8211FieldFormat_t_OBJECTS = $(am_sio_8211FieldFormat_t_OBJECTS)
sio_8211FieldFormat_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211FieldFormat_t_LDFLAGS =
am_sio_8211Field_t_OBJECTS = sio_8211Field_t.$(OBJEXT)
sio_8211Field_t_OBJECTS = $(am_sio_8211Field_t_OBJECTS)
sio_8211Field_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211Field_t_LDFLAGS =
am_sio_8211SubfieldFormat_t_OBJECTS = sio_8211SubfieldFormat_t.$(OBJEXT)
sio_8211SubfieldFormat_t_OBJECTS = \
	$(am_sio_8211SubfieldFormat_t_OBJECTS)
sio_8211SubfieldFormat_t_DEPENDENCIES = \
	$(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211SubfieldFormat_t_LDFLAGS =
am_sio_8211_t_OBJECTS = sio_8211_t.$(OBJEXT)
sio_8211_t_OBJECTS = $(am_sio_8211_t_OBJECTS)
sio_8211_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_8211_t_LDFLAGS =
am_sio_Buffer_t_OBJECTS = sio_Buffer_t.$(OBJEXT)
sio_Buffer_t_OBJECTS = $(am_sio_Buffer_t_OBJECTS)
sio_Buffer_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_Buffer_t_LDFLAGS =
am_sio_ConverterFactory_t_OBJECTS = sio_ConverterFactory_t.$(OBJEXT)
sio_ConverterFactory_t_OBJECTS = $(am_sio_ConverterFactory_t_OBJECTS)
sio_ConverterFactory_t_DEPENDENCIES = \
	$(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_ConverterFactory_t_LDFLAGS =
am_sio_Error_t_OBJECTS = sio_Error_t.$(OBJEXT)
sio_Error_t_OBJECTS = $(am_sio_Error_t_OBJECTS)
sio_Error_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_Error_t_LDFLAGS =
am_sio_ReadWrite_t_OBJECTS = sio_ReadWrite_t.$(OBJEXT)
sio_ReadWrite_t_OBJECTS = $(am_sio_ReadWrite_t_OBJECTS)
sio_ReadWrite_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_ReadWrite_t_LDFLAGS =
am_sio_Reader_t_OBJECTS = sio_Reader_t.$(OBJEXT)
sio_Reader_t_OBJECTS = $(am_sio_Reader_t_OBJECTS)
sio_Reader_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_Reader_t_LDFLAGS =
am_sio_Writer_t_OBJECTS = sio_Writer_t.$(OBJEXT)
sio_Writer_t_OBJECTS = $(am_sio_Writer_t_OBJECTS)
sio_Writer_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sio_Writer_t_LDFLAGS =
am_sl_Chain_t_OBJECTS = sl_Chain_t.$(OBJEXT)
sl_Chain_t_OBJECTS = $(am_sl_Chain_t_OBJECTS)
sl_Chain_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_Chain_t_LDFLAGS =
am_sl_Node_t_OBJECTS = sl_Node_t.$(OBJEXT)
sl_Node_t_OBJECTS = $(am_sl_Node_t_OBJECTS)
sl_Node_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_Node_t_LDFLAGS =
am_sl_Point_t_OBJECTS = sl_Point_t.$(OBJEXT)
sl_Point_t_OBJECTS = $(am_sl_Point_t_OBJECTS)
sl_Point_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_Point_t_LDFLAGS =
am_sl_Polygon_t_OBJECTS = sl_Polygon_t.$(OBJEXT)
sl_Polygon_t_OBJECTS = $(am_sl_Polygon_t_OBJECTS)
sl_Polygon_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_Polygon_t_LDFLAGS =
am_sl_Ring_t_OBJECTS = sl_Ring_t.$(OBJEXT)
sl_Ring_t_OBJECTS = $(am_sl_Ring_t_OBJECTS)
sl_Ring_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_Ring_t_LDFLAGS =
am_sl_String_t_OBJECTS = sl_String_t.$(OBJEXT)
sl_String_t_OBJECTS = $(am_sl_String_t_OBJECTS)
sl_String_t_DEPENDENCIES = $(top_builddir)/sdts++/libsdts++.la \
	$(top_builddir)/sysutils/libsysutils.a
sl_String_t_LDFLAGS =

DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/container_t.Po \
	./$(DEPDIR)/sb_Directory_t.Po \
	./$(DEPDIR)/sb_ForeignID_t.Po \
	./$(DEPDIR)/sb_Spatial_t.Po \
	./$(DEPDIR)/sb_accessor_t.Po \
	./$(DEPDIR)/sb_catd_t.Po ./$(DEPDIR)/sb_cats_t.Po \
	./$(DEPDIR)/sb_cell_t.Po ./$(DEPDIR)/sb_comp_t.Po \
	./$(DEPDIR)/sb_dddf_t.Po ./$(DEPDIR)/sb_ddom_t.Po \
	./$(DEPDIR)/sb_ddsh_t.Po ./$(DEPDIR)/sb_iden_t.Po \
	./$(DEPDIR)/sb_iref_t.Po ./$(DEPDIR)/sb_line_t.Po \
	./$(DEPDIR)/sb_pnts_t.Po ./$(DEPDIR)/sb_poly_t.Po \
	./$(DEPDIR)/sb_ring_t.Po ./$(DEPDIR)/sb_spdm_t.Po \
	./$(DEPDIR)/sb_utils_t.Po ./$(DEPDIR)/sb_xref_t.Po \
	./$(DEPDIR)/sc_Field_t.Po \
	./$(DEPDIR)/sc_MultiTypeValue_t.Po \
	./$(DEPDIR)/sc_Subfield_t.Po \
	./$(DEPDIR)/sio_8211Converter_t.Po \
	./$(DEPDIR)/sio_8211DDRField_t.Po \
	./$(DEPDIR)/sio_8211DDRLeader_t.Po \
	./$(DEPDIR)/sio_8211DDR_t.Po \
	./$(DEPDIR)/sio_8211DRLeader_t.Po \
	./$(DEPDIR)/sio_8211DR_t.Po \
	./$(DEPDIR)/sio_8211DirEntry_t.Po \
	./$(DEPDIR)/sio_8211FieldFormat_t.Po \
	./$(DEPDIR)/sio_8211Field_t.Po \
	./$(DEPDIR)/sio_8211SubfieldFormat_t.Po \
	./$(DEPDIR)/sio_8211_t.Po \
	./$(DEPDIR)/sio_Buffer_t.Po \
	./$(DEPDIR)/sio_ConverterFactory_t.Po \
	./$(DEPDIR)/sio_Error_t.Po \
	./$(DEPDIR)/sio_ReadWrite_t.Po \
	./$(DEPDIR)/sio_Reader_t.Po \
	./$(DEPDIR)/sio_Writer_t.Po \
	./$(DEPDIR)/sl_Chain_t.Po ./$(DEPDIR)/sl_Node_t.Po \
	./$(DEPDIR)/sl_Point_t.Po \
	./$(DEPDIR)/sl_Polygon_t.Po \
	./$(DEPDIR)/sl_Ring_t.Po ./$(DEPDIR)/sl_String_t.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(container_t_SOURCES) $(sb_Directory_t_SOURCES) \
	$(sb_ForeignID_t_SOURCES) $(sb_Spatial_t_SOURCES) \
	$(sb_accessor_t_SOURCES) $(sb_catd_t_SOURCES) \
	$(sb_cats_t_SOURCES) $(sb_cell_t_SOURCES) $(sb_comp_t_SOURCES) \
	$(sb_dddf_t_SOURCES) $(sb_ddom_t_SOURCES) $(sb_ddsh_t_SOURCES) \
	$(sb_iden_t_SOURCES) $(sb_iref_t_SOURCES) $(sb_line_t_SOURCES) \
	$(sb_pnts_t_SOURCES) $(sb_poly_t_SOURCES) $(sb_ring_t_SOURCES) \
	$(sb_spdm_t_SOURCES) $(sb_utils_t_SOURCES) $(sb_xref_t_SOURCES) \
	$(sc_Field_t_SOURCES) $(sc_MultiTypeValue_t_SOURCES) \
	$(sc_Subfield_t_SOURCES) $(sio_8211Converter_t_SOURCES) \
	$(sio_8211DDRField_t_SOURCES) $(sio_8211DDRLeader_t_SOURCES) \
	$(sio_8211DDR_t_SOURCES) $(sio_8211DRLeader_t_SOURCES) \
	$(sio_8211DR_t_SOURCES) $(sio_8211DirEntry_t_SOURCES) \
	$(sio_8211FieldFormat_t_SOURCES) $(sio_8211Field_t_SOURCES) \
	$(sio_8211SubfieldFormat_t_SOURCES) $(sio_8211_t_SOURCES) \
	$(sio_Buffer_t_SOURCES) $(sio_ConverterFactory_t_SOURCES) \
	$(sio_Error_t_SOURCES) $(sio_ReadWrite_t_SOURCES) \
	$(sio_Reader_t_SOURCES) $(sio_Writer_t_SOURCES) \
	$(sl_Chain_t_SOURCES) $(sl_Node_t_SOURCES) \
	$(sl_Point_t_SOURCES) $(sl_Polygon_t_SOURCES) \
	$(sl_Ring_t_SOURCES) $(sl_String_t_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(container_t_SOURCES) $(sb_Directory_t_SOURCES) $(sb_ForeignID_t_SOURCES) $(sb_Spatial_t_SOURCES) $(sb_accessor_t_SOURCES) $(sb_catd_t_SOURCES) $(sb_cats_t_SOURCES) $(sb_cell_t_SOURCES) $(sb_comp_t_SOURCES) $(sb_dddf_t_SOURCES) $(sb_ddom_t_SOURCES) $(sb_ddsh_t_SOURCES) $(sb_iden_t_SOURCES) $(sb_iref_t_SOURCES) $(sb_line_t_SOURCES) $(sb_pnts_t_SOURCES) $(sb_poly_t_SOURCES) $(sb_ring_t_SOURCES) $(sb_spdm_t_SOURCES) $(sb_utils_t_SOURCES) $(sb_xref_t_SOURCES) $(sc_Field_t_SOURCES) $(sc_MultiTypeValue_t_SOURCES) $(sc_Subfield_t_SOURCES) $(sio_8211Converter_t_SOURCES) $(sio_8211DDRField_t_SOURCES) $(sio_8211DDRLeader_t_SOURCES) $(sio_8211DDR_t_SOURCES) $(sio_8211DRLeader_t_SOURCES) $(sio_8211DR_t_SOURCES) $(sio_8211DirEntry_t_SOURCES) $(sio_8211FieldFormat_t_SOURCES) $(sio_8211Field_t_SOURCES) $(sio_8211SubfieldFormat_t_SOURCES) $(sio_8211_t_SOURCES) $(sio_Buffer_t_SOURCES) $(sio_ConverterFactory_t_SOURCES) $(sio_Error_t_SOURCES) $(sio_ReadWrite_t_SOURCES) $(sio_Reader_t_SOURCES) $(sio_Writer_t_SOURCES) $(sl_Chain_t_SOURCES) $(sl_Node_t_SOURCES) $(sl_Point_t_SOURCES) $(sl_Polygon_t_SOURCES) $(sl_Ring_t_SOURCES) $(sl_String_t_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/Makefile
Makefile: # $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
container_t$(EXEEXT): $(container_t_OBJECTS) $(container_t_DEPENDENCIES) 
	@rm -f container_t$(EXEEXT)
	$(CXXLINK) $(container_t_LDFLAGS) $(container_t_OBJECTS) $(container_t_LDADD) $(LIBS)
sb_Directory_t$(EXEEXT): $(sb_Directory_t_OBJECTS) $(sb_Directory_t_DEPENDENCIES) 
	@rm -f sb_Directory_t$(EXEEXT)
	$(CXXLINK) $(sb_Directory_t_LDFLAGS) $(sb_Directory_t_OBJECTS) $(sb_Directory_t_LDADD) $(LIBS)
sb_ForeignID_t$(EXEEXT): $(sb_ForeignID_t_OBJECTS) $(sb_ForeignID_t_DEPENDENCIES) 
	@rm -f sb_ForeignID_t$(EXEEXT)
	$(CXXLINK) $(sb_ForeignID_t_LDFLAGS) $(sb_ForeignID_t_OBJECTS) $(sb_ForeignID_t_LDADD) $(LIBS)
sb_Spatial_t$(EXEEXT): $(sb_Spatial_t_OBJECTS) $(sb_Spatial_t_DEPENDENCIES) 
	@rm -f sb_Spatial_t$(EXEEXT)
	$(CXXLINK) $(sb_Spatial_t_LDFLAGS) $(sb_Spatial_t_OBJECTS) $(sb_Spatial_t_LDADD) $(LIBS)
sb_accessor_t$(EXEEXT): $(sb_accessor_t_OBJECTS) $(sb_accessor_t_DEPENDENCIES) 
	@rm -f sb_accessor_t$(EXEEXT)
	$(CXXLINK) $(sb_accessor_t_LDFLAGS) $(sb_accessor_t_OBJECTS) $(sb_accessor_t_LDADD) $(LIBS)
sb_catd_t$(EXEEXT): $(sb_catd_t_OBJECTS) $(sb_catd_t_DEPENDENCIES) 
	@rm -f sb_catd_t$(EXEEXT)
	$(CXXLINK) $(sb_catd_t_LDFLAGS) $(sb_catd_t_OBJECTS) $(sb_catd_t_LDADD) $(LIBS)
sb_cats_t$(EXEEXT): $(sb_cats_t_OBJECTS) $(sb_cats_t_DEPENDENCIES) 
	@rm -f sb_cats_t$(EXEEXT)
	$(CXXLINK) $(sb_cats_t_LDFLAGS) $(sb_cats_t_OBJECTS) $(sb_cats_t_LDADD) $(LIBS)
sb_cell_t$(EXEEXT): $(sb_cell_t_OBJECTS) $(sb_cell_t_DEPENDENCIES) 
	@rm -f sb_cell_t$(EXEEXT)
	$(CXXLINK) $(sb_cell_t_LDFLAGS) $(sb_cell_t_OBJECTS) $(sb_cell_t_LDADD) $(LIBS)
sb_comp_t$(EXEEXT): $(sb_comp_t_OBJECTS) $(sb_comp_t_DEPENDENCIES) 
	@rm -f sb_comp_t$(EXEEXT)
	$(CXXLINK) $(sb_comp_t_LDFLAGS) $(sb_comp_t_OBJECTS) $(sb_comp_t_LDADD) $(LIBS)
sb_dddf_t$(EXEEXT): $(sb_dddf_t_OBJECTS) $(sb_dddf_t_DEPENDENCIES) 
	@rm -f sb_dddf_t$(EXEEXT)
	$(CXXLINK) $(sb_dddf_t_LDFLAGS) $(sb_dddf_t_OBJECTS) $(sb_dddf_t_LDADD) $(LIBS)
sb_ddom_t$(EXEEXT): $(sb_ddom_t_OBJECTS) $(sb_ddom_t_DEPENDENCIES) 
	@rm -f sb_ddom_t$(EXEEXT)
	$(CXXLINK) $(sb_ddom_t_LDFLAGS) $(sb_ddom_t_OBJECTS) $(sb_ddom_t_LDADD) $(LIBS)
sb_ddsh_t$(EXEEXT): $(sb_ddsh_t_OBJECTS) $(sb_ddsh_t_DEPENDENCIES) 
	@rm -f sb_ddsh_t$(EXEEXT)
	$(CXXLINK) $(sb_ddsh_t_LDFLAGS) $(sb_ddsh_t_OBJECTS) $(sb_ddsh_t_LDADD) $(LIBS)
sb_iden_t$(EXEEXT): $(sb_iden_t_OBJECTS) $(sb_iden_t_DEPENDENCIES) 
	@rm -f sb_iden_t$(EXEEXT)
	$(CXXLINK) $(sb_iden_t_LDFLAGS) $(sb_iden_t_OBJECTS) $(sb_iden_t_LDADD) $(LIBS)
sb_iref_t$(EXEEXT): $(sb_iref_t_OBJECTS) $(sb_iref_t_DEPENDENCIES) 
	@rm -f sb_iref_t$(EXEEXT)
	$(CXXLINK) $(sb_iref_t_LDFLAGS) $(sb_iref_t_OBJECTS) $(sb_iref_t_LDADD) $(LIBS)
sb_line_t$(EXEEXT): $(sb_line_t_OBJECTS) $(sb_line_t_DEPENDENCIES) 
	@rm -f sb_line_t$(EXEEXT)
	$(CXXLINK) $(sb_line_t_LDFLAGS) $(sb_line_t_OBJECTS) $(sb_line_t_LDADD) $(LIBS)
sb_pnts_t$(EXEEXT): $(sb_pnts_t_OBJECTS) $(sb_pnts_t_DEPENDENCIES) 
	@rm -f sb_pnts_t$(EXEEXT)
	$(CXXLINK) $(sb_pnts_t_LDFLAGS) $(sb_pnts_t_OBJECTS) $(sb_pnts_t_LDADD) $(LIBS)
sb_poly_t$(EXEEXT): $(sb_poly_t_OBJECTS) $(sb_poly_t_DEPENDENCIES) 
	@rm -f sb_poly_t$(EXEEXT)
	$(CXXLINK) $(sb_poly_t_LDFLAGS) $(sb_poly_t_OBJECTS) $(sb_poly_t_LDADD) $(LIBS)
sb_ring_t$(EXEEXT): $(sb_ring_t_OBJECTS) $(sb_ring_t_DEPENDENCIES) 
	@rm -f sb_ring_t$(EXEEXT)
	$(CXXLINK) $(sb_ring_t_LDFLAGS) $(sb_ring_t_OBJECTS) $(sb_ring_t_LDADD) $(LIBS)
sb_spdm_t$(EXEEXT): $(sb_spdm_t_OBJECTS) $(sb_spdm_t_DEPENDENCIES) 
	@rm -f sb_spdm_t$(EXEEXT)
	$(CXXLINK) $(sb_spdm_t_LDFLAGS) $(sb_spdm_t_OBJECTS) $(sb_spdm_t_LDADD) $(LIBS)
sb_utils_t$(EXEEXT): $(sb_utils_t_OBJECTS) $(sb_utils_t_DEPENDENCIES) 
	@rm -f sb_utils_t$(EXEEXT)
	$(CXXLINK) $(sb_utils_t_LDFLAGS) $(sb_utils_t_OBJECTS) $(sb_utils_t_LDADD) $(LIBS)
sb_xref_t$(EXEEXT): $(sb_xref_t_OBJECTS) $(sb_xref_t_DEPENDENCIES) 
	@rm -f sb_xref_t$(EXEEXT)
	$(CXXLINK) $(sb_xref_t_LDFLAGS) $(sb_xref_t_OBJECTS) $(sb_xref_t_LDADD) $(LIBS)
sc_Field_t$(EXEEXT): $(sc_Field_t_OBJECTS) $(sc_Field_t_DEPENDENCIES) 
	@rm -f sc_Field_t$(EXEEXT)
	$(CXXLINK) $(sc_Field_t_LDFLAGS) $(sc_Field_t_OBJECTS) $(sc_Field_t_LDADD) $(LIBS)
sc_MultiTypeValue_t$(EXEEXT): $(sc_MultiTypeValue_t_OBJECTS) $(sc_MultiTypeValue_t_DEPENDENCIES) 
	@rm -f sc_MultiTypeValue_t$(EXEEXT)
	$(CXXLINK) $(sc_MultiTypeValue_t_LDFLAGS) $(sc_MultiTypeValue_t_OBJECTS) $(sc_MultiTypeValue_t_LDADD) $(LIBS)
sc_Subfield_t$(EXEEXT): $(sc_Subfield_t_OBJECTS) $(sc_Subfield_t_DEPENDENCIES) 
	@rm -f sc_Subfield_t$(EXEEXT)
	$(CXXLINK) $(sc_Subfield_t_LDFLAGS) $(sc_Subfield_t_OBJECTS) $(sc_Subfield_t_LDADD) $(LIBS)
sio_8211Converter_t$(EXEEXT): $(sio_8211Converter_t_OBJECTS) $(sio_8211Converter_t_DEPENDENCIES) 
	@rm -f sio_8211Converter_t$(EXEEXT)
	$(CXXLINK) $(sio_8211Converter_t_LDFLAGS) $(sio_8211Converter_t_OBJECTS) $(sio_8211Converter_t_LDADD) $(LIBS)
sio_8211DDRField_t$(EXEEXT): $(sio_8211DDRField_t_OBJECTS) $(sio_8211DDRField_t_DEPENDENCIES) 
	@rm -f sio_8211DDRField_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DDRField_t_LDFLAGS) $(sio_8211DDRField_t_OBJECTS) $(sio_8211DDRField_t_LDADD) $(LIBS)
sio_8211DDRLeader_t$(EXEEXT): $(sio_8211DDRLeader_t_OBJECTS) $(sio_8211DDRLeader_t_DEPENDENCIES) 
	@rm -f sio_8211DDRLeader_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DDRLeader_t_LDFLAGS) $(sio_8211DDRLeader_t_OBJECTS) $(sio_8211DDRLeader_t_LDADD) $(LIBS)
sio_8211DDR_t$(EXEEXT): $(sio_8211DDR_t_OBJECTS) $(sio_8211DDR_t_DEPENDENCIES) 
	@rm -f sio_8211DDR_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DDR_t_LDFLAGS) $(sio_8211DDR_t_OBJECTS) $(sio_8211DDR_t_LDADD) $(LIBS)
sio_8211DRLeader_t$(EXEEXT): $(sio_8211DRLeader_t_OBJECTS) $(sio_8211DRLeader_t_DEPENDENCIES) 
	@rm -f sio_8211DRLeader_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DRLeader_t_LDFLAGS) $(sio_8211DRLeader_t_OBJECTS) $(sio_8211DRLeader_t_LDADD) $(LIBS)
sio_8211DR_t$(EXEEXT): $(sio_8211DR_t_OBJECTS) $(sio_8211DR_t_DEPENDENCIES) 
	@rm -f sio_8211DR_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DR_t_LDFLAGS) $(sio_8211DR_t_OBJECTS) $(sio_8211DR_t_LDADD) $(LIBS)
sio_8211DirEntry_t$(EXEEXT): $(sio_8211DirEntry_t_OBJECTS) $(sio_8211DirEntry_t_DEPENDENCIES) 
	@rm -f sio_8211DirEntry_t$(EXEEXT)
	$(CXXLINK) $(sio_8211DirEntry_t_LDFLAGS) $(sio_8211DirEntry_t_OBJECTS) $(sio_8211DirEntry_t_LDADD) $(LIBS)
sio_8211FieldFormat_t$(EXEEXT): $(sio_8211FieldFormat_t_OBJECTS) $(sio_8211FieldFormat_t_DEPENDENCIES) 
	@rm -f sio_8211FieldFormat_t$(EXEEXT)
	$(CXXLINK) $(sio_8211FieldFormat_t_LDFLAGS) $(sio_8211FieldFormat_t_OBJECTS) $(sio_8211FieldFormat_t_LDADD) $(LIBS)
sio_8211Field_t$(EXEEXT): $(sio_8211Field_t_OBJECTS) $(sio_8211Field_t_DEPENDENCIES) 
	@rm -f sio_8211Field_t$(EXEEXT)
	$(CXXLINK) $(sio_8211Field_t_LDFLAGS) $(sio_8211Field_t_OBJECTS) $(sio_8211Field_t_LDADD) $(LIBS)
sio_8211SubfieldFormat_t$(EXEEXT): $(sio_8211SubfieldFormat_t_OBJECTS) $(sio_8211SubfieldFormat_t_DEPENDENCIES) 
	@rm -f sio_8211SubfieldFormat_t$(EXEEXT)
	$(CXXLINK) $(sio_8211SubfieldFormat_t_LDFLAGS) $(sio_8211SubfieldFormat_t_OBJECTS) $(sio_8211SubfieldFormat_t_LDADD) $(LIBS)
sio_8211_t$(EXEEXT): $(sio_8211_t_OBJECTS) $(sio_8211_t_DEPENDENCIES) 
	@rm -f sio_8211_t$(EXEEXT)
	$(CXXLINK) $(sio_8211_t_LDFLAGS) $(sio_8211_t_OBJECTS) $(sio_8211_t_LDADD) $(LIBS)
sio_Buffer_t$(EXEEXT): $(sio_Buffer_t_OBJECTS) $(sio_Buffer_t_DEPENDENCIES) 
	@rm -f sio_Buffer_t$(EXEEXT)
	$(CXXLINK) $(sio_Buffer_t_LDFLAGS) $(sio_Buffer_t_OBJECTS) $(sio_Buffer_t_LDADD) $(LIBS)
sio_ConverterFactory_t$(EXEEXT): $(sio_ConverterFactory_t_OBJECTS) $(sio_ConverterFactory_t_DEPENDENCIES) 
	@rm -f sio_ConverterFactory_t$(EXEEXT)
	$(CXXLINK) $(sio_ConverterFactory_t_LDFLAGS) $(sio_ConverterFactory_t_OBJECTS) $(sio_ConverterFactory_t_LDADD) $(LIBS)
sio_Error_t$(EXEEXT): $(sio_Error_t_OBJECTS) $(sio_Error_t_DEPENDENCIES) 
	@rm -f sio_Error_t$(EXEEXT)
	$(CXXLINK) $(sio_Error_t_LDFLAGS) $(sio_Error_t_OBJECTS) $(sio_Error_t_LDADD) $(LIBS)
sio_ReadWrite_t$(EXEEXT): $(sio_ReadWrite_t_OBJECTS) $(sio_ReadWrite_t_DEPENDENCIES) 
	@rm -f sio_ReadWrite_t$(EXEEXT)
	$(CXXLINK) $(sio_ReadWrite_t_LDFLAGS) $(sio_ReadWrite_t_OBJECTS) $(sio_ReadWrite_t_LDADD) $(LIBS)
sio_Reader_t$(EXEEXT): $(sio_Reader_t_OBJECTS) $(sio_Reader_t_DEPENDENCIES) 
	@rm -f sio_Reader_t$(EXEEXT)
	$(CXXLINK) $(sio_Reader_t_LDFLAGS) $(sio_Reader_t_OBJECTS) $(sio_Reader_t_LDADD) $(LIBS)
sio_Writer_t$(EXEEXT): $(sio_Writer_t_OBJECTS) $(sio_Writer_t_DEPENDENCIES) 
	@rm -f sio_Writer_t$(EXEEXT)
	$(CXXLINK) $(sio_Writer_t_LDFLAGS) $(sio_Writer_t_OBJECTS) $(sio_Writer_t_LDADD) $(LIBS)
sl_Chain_t$(EXEEXT): $(sl_Chain_t_OBJECTS) $(sl_Chain_t_DEPENDENCIES) 
	@rm -f sl_Chain_t$(EXEEXT)
	$(CXXLINK) $(sl_Chain_t_LDFLAGS) $(sl_Chain_t_OBJECTS) $(sl_Chain_t_LDADD) $(LIBS)
sl_Node_t$(EXEEXT): $(sl_Node_t_OBJECTS) $(sl_Node_t_DEPENDENCIES) 
	@rm -f sl_Node_t$(EXEEXT)
	$(CXXLINK) $(sl_Node_t_LDFLAGS) $(sl_Node_t_OBJECTS) $(sl_Node_t_LDADD) $(LIBS)
sl_Point_t$(EXEEXT): $(sl_Point_t_OBJECTS) $(sl_Point_t_DEPENDENCIES) 
	@rm -f sl_Point_t$(EXEEXT)
	$(CXXLINK) $(sl_Point_t_LDFLAGS) $(sl_Point_t_OBJECTS) $(sl_Point_t_LDADD) $(LIBS)
sl_Polygon_t$(EXEEXT): $(sl_Polygon_t_OBJECTS) $(sl_Polygon_t_DEPENDENCIES) 
	@rm -f sl_Polygon_t$(EXEEXT)
	$(CXXLINK) $(sl_Polygon_t_LDFLAGS) $(sl_Polygon_t_OBJECTS) $(sl_Polygon_t_LDADD) $(LIBS)
sl_Ring_t$(EXEEXT): $(sl_Ring_t_OBJECTS) $(sl_Ring_t_DEPENDENCIES) 
	@rm -f sl_Ring_t$(EXEEXT)
	$(CXXLINK) $(sl_Ring_t_LDFLAGS) $(sl_Ring_t_OBJECTS) $(sl_Ring_t_LDADD) $(LIBS)
sl_String_t$(EXEEXT): $(sl_String_t_OBJECTS) $(sl_String_t_DEPENDENCIES) 
	@rm -f sl_String_t$(EXEEXT)
	$(CXXLINK) $(sl_String_t_LDFLAGS) $(sl_String_t_OBJECTS) $(sl_String_t_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/container_t.Po
include ./$(DEPDIR)/sb_Directory_t.Po
include ./$(DEPDIR)/sb_ForeignID_t.Po
include ./$(DEPDIR)/sb_Spatial_t.Po
include ./$(DEPDIR)/sb_accessor_t.Po
include ./$(DEPDIR)/sb_catd_t.Po
include ./$(DEPDIR)/sb_cats_t.Po
include ./$(DEPDIR)/sb_cell_t.Po
include ./$(DEPDIR)/sb_comp_t.Po
include ./$(DEPDIR)/sb_dddf_t.Po
include ./$(DEPDIR)/sb_ddom_t.Po
include ./$(DEPDIR)/sb_ddsh_t.Po
include ./$(DEPDIR)/sb_iden_t.Po
include ./$(DEPDIR)/sb_iref_t.Po
include ./$(DEPDIR)/sb_line_t.Po
include ./$(DEPDIR)/sb_pnts_t.Po
include ./$(DEPDIR)/sb_poly_t.Po
include ./$(DEPDIR)/sb_ring_t.Po
include ./$(DEPDIR)/sb_spdm_t.Po
include ./$(DEPDIR)/sb_utils_t.Po
include ./$(DEPDIR)/sb_xref_t.Po
include ./$(DEPDIR)/sc_Field_t.Po
include ./$(DEPDIR)/sc_MultiTypeValue_t.Po
include ./$(DEPDIR)/sc_Subfield_t.Po
include ./$(DEPDIR)/sio_8211Converter_t.Po
include ./$(DEPDIR)/sio_8211DDRField_t.Po
include ./$(DEPDIR)/sio_8211DDRLeader_t.Po
include ./$(DEPDIR)/sio_8211DDR_t.Po
include ./$(DEPDIR)/sio_8211DRLeader_t.Po
include ./$(DEPDIR)/sio_8211DR_t.Po
include ./$(DEPDIR)/sio_8211DirEntry_t.Po
include ./$(DEPDIR)/sio_8211FieldFormat_t.Po
include ./$(DEPDIR)/sio_8211Field_t.Po
include ./$(DEPDIR)/sio_8211SubfieldFormat_t.Po
include ./$(DEPDIR)/sio_8211_t.Po
include ./$(DEPDIR)/sio_Buffer_t.Po
include ./$(DEPDIR)/sio_ConverterFactory_t.Po
include ./$(DEPDIR)/sio_Error_t.Po
include ./$(DEPDIR)/sio_ReadWrite_t.Po
include ./$(DEPDIR)/sio_Reader_t.Po
include ./$(DEPDIR)/sio_Writer_t.Po
include ./$(DEPDIR)/sl_Chain_t.Po
include ./$(DEPDIR)/sl_Node_t.Po
include ./$(DEPDIR)/sl_Point_t.Po
include ./$(DEPDIR)/sl_Polygon_t.Po
include ./$(DEPDIR)/sl_Ring_t.Po
include ./$(DEPDIR)/sl_String_t.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=yes \
#	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -gt `echo "$$banner" | wc -c` && \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -n "$$skipped" && echo "$$skipped"; \
	  test -n "$$report" && echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am


#sb_xref_t_LDADD                = $(LIBRARY)
#sb_xref_t_SOURCES            = sb_xref_t.cpp
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
