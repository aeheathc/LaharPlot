# You need bjam to build the library with this
#
# You can get bjam from http://www.boost.org/tools/build/index.html#Jam
#
# $Id: Jamfile,v 1.2 2003/06/10 17:48:50 mcoletti Exp $
#
subproject sdts++ ;


lib sdtsxx : ./builder/sb_Accessor.cpp
		   ./builder/sb_At.cpp
		   ./builder/sb_Catd.cpp
		   ./builder/sb_Cats.cpp
		   ./builder/sb_Cell.cpp
		   ./builder/sb_Clrx.cpp
		   ./builder/sb_Comp.cpp
		   ./builder/sb_Dddf.cpp
		   ./builder/sb_Ddom.cpp
		   ./builder/sb_Ddsh.cpp
		   ./builder/sb_Dq.cpp
		   ./builder/sb_ForeignID.cpp
		   ./builder/sb_Iden.cpp
		   ./builder/sb_Iref.cpp
		   ./builder/sb_Ldef.cpp
		   ./builder/sb_Line.cpp
		   ./builder/sb_Module.cpp
		   # NOT IMPLEMENTED ./builder/sb_Pnts.cpp
		   # NOT IMPLEMENTED ./builder/sb_PointNode.cpp
		   ./builder/sb_Poly.cpp
		   ./builder/sb_Ring.cpp
		   ./builder/sb_Rsdf.cpp
		   ./builder/sb_Spdm.cpp
		   ./builder/sb_Stat.cpp
		   ./builder/sb_Utils.cpp
		   ./builder/sb_Xref.cpp
		   ./container/sc_Field.cpp
		   ./container/sc_Module.cpp
		   ./container/sc_MultiTypeValue.cpp
		   ./container/sc_Record.cpp
		   ./container/sc_Subfield.cpp
		   ./io/sio_8211Converter.cpp
		   ./io/sio_8211DDR.cpp
		   ./io/sio_8211DDRField.cpp
		   ./io/sio_8211DDRLeader.cpp
		   ./io/sio_8211Directory.cpp
		   ./io/sio_8211DirEntry.cpp
		   ./io/sio_8211DR.cpp
		   ./io/sio_8211DRLeader.cpp
		   ./io/sio_8211Field.cpp
		   ./io/sio_8211FieldArea.cpp
		   ./io/sio_8211FieldFormat.cpp
		   ./io/sio_8211Leader.cpp
		   ./io/sio_8211Record.cpp
		   ./io/sio_8211SubfieldFormat.cpp
		   ./io/sio_8211Utils.cpp
		   ./io/sio_Buffer.cpp
		   ./io/sio_Converter.cpp
		   ./io/sio_ConverterFactory.cpp
		   ./io/sio_Error.cpp
		   ./io/sio_Reader.cpp
		   ./io/sio_Utils.cpp
		   ./io/sio_Writer.cpp
		   ./io/FormatLexer.c  # bjam supports yacc/bison so should 
		   ./io/FormatParser.c # modify Jamfile to build these
		   ./logical/sl_Chain.cpp
		   ./logical/sl_Node.cpp
		   ./logical/sl_Point.cpp
		   ./logical/sl_Polygon.cpp
		   ./logical/sl_String.cpp
                 : <include>$(BOOST_ROOT)
		   <include>$(TOP)
		   <include>.
		   <include>$(TOP)/Windows # to get bogus "unistd.h"
		   <rtti>on
		   <exception-handling>on
		   <msvc><*><cflags>-TP    # force to compile as C++
                   <gcc><*><cflags>"-x c++"  # force to compile as C++
                   <gcc><*><define>VECTOR_ITERATOR_POINTER_NOT_EQUIVALENT
		 : debug
                 ;
